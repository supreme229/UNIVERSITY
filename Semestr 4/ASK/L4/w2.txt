
./a.out:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 8a 2f 00 00    	pushq  0x2f8a(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 8b 2f 00 00 	bnd jmpq *0x2f8b(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop

Disassembly of section .plt.got:

0000000000001060 <__cxa_finalize@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 8d 2f 00 00 	bnd jmpq *0x2f8d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001070 <puts@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 45 2f 00 00 	bnd jmpq *0x2f45(%rip)        # 3fc0 <puts@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001080 <__stack_chk_fail@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 3d 2f 00 00 	bnd jmpq *0x2f3d(%rip)        # 3fc8 <__stack_chk_fail@GLIBC_2.4>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <__printf_chk@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 35 2f 00 00 	bnd jmpq *0x2f35(%rip)        # 3fd0 <__printf_chk@GLIBC_2.3.4>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010a0 <_start>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	31 ed                	xor    %ebp,%ebp
    10a6:	49 89 d1             	mov    %rdx,%r9
    10a9:	5e                   	pop    %rsi
    10aa:	48 89 e2             	mov    %rsp,%rdx
    10ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10b1:	50                   	push   %rax
    10b2:	54                   	push   %rsp
    10b3:	4c 8d 05 06 03 00 00 	lea    0x306(%rip),%r8        # 13c0 <__libc_csu_fini>
    10ba:	48 8d 0d 8f 02 00 00 	lea    0x28f(%rip),%rcx        # 1350 <__libc_csu_init>
    10c1:	48 8d 3d 1b 02 00 00 	lea    0x21b(%rip),%rdi        # 12e3 <main>
    10c8:	ff 15 12 2f 00 00    	callq  *0x2f12(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ce:	f4                   	hlt    
    10cf:	90                   	nop

00000000000010d0 <deregister_tm_clones>:
    10d0:	48 8d 3d 39 2f 00 00 	lea    0x2f39(%rip),%rdi        # 4010 <__TMC_END__>
    10d7:	48 8d 05 32 2f 00 00 	lea    0x2f32(%rip),%rax        # 4010 <__TMC_END__>
    10de:	48 39 f8             	cmp    %rdi,%rax
    10e1:	74 15                	je     10f8 <deregister_tm_clones+0x28>
    10e3:	48 8b 05 ee 2e 00 00 	mov    0x2eee(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ea:	48 85 c0             	test   %rax,%rax
    10ed:	74 09                	je     10f8 <deregister_tm_clones+0x28>
    10ef:	ff e0                	jmpq   *%rax
    10f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10f8:	c3                   	retq   
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <register_tm_clones>:
    1100:	48 8d 3d 09 2f 00 00 	lea    0x2f09(%rip),%rdi        # 4010 <__TMC_END__>
    1107:	48 8d 35 02 2f 00 00 	lea    0x2f02(%rip),%rsi        # 4010 <__TMC_END__>
    110e:	48 29 fe             	sub    %rdi,%rsi
    1111:	48 89 f0             	mov    %rsi,%rax
    1114:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1118:	48 c1 f8 03          	sar    $0x3,%rax
    111c:	48 01 c6             	add    %rax,%rsi
    111f:	48 d1 fe             	sar    %rsi
    1122:	74 14                	je     1138 <register_tm_clones+0x38>
    1124:	48 8b 05 c5 2e 00 00 	mov    0x2ec5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    112b:	48 85 c0             	test   %rax,%rax
    112e:	74 08                	je     1138 <register_tm_clones+0x38>
    1130:	ff e0                	jmpq   *%rax
    1132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <__do_global_dtors_aux>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	80 3d c5 2e 00 00 00 	cmpb   $0x0,0x2ec5(%rip)        # 4010 <__TMC_END__>
    114b:	75 2b                	jne    1178 <__do_global_dtors_aux+0x38>
    114d:	55                   	push   %rbp
    114e:	48 83 3d a2 2e 00 00 	cmpq   $0x0,0x2ea2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1155:	00 
    1156:	48 89 e5             	mov    %rsp,%rbp
    1159:	74 0c                	je     1167 <__do_global_dtors_aux+0x27>
    115b:	48 8b 3d a6 2e 00 00 	mov    0x2ea6(%rip),%rdi        # 4008 <__dso_handle>
    1162:	e8 f9 fe ff ff       	callq  1060 <__cxa_finalize@plt>
    1167:	e8 64 ff ff ff       	callq  10d0 <deregister_tm_clones>
    116c:	c6 05 9d 2e 00 00 01 	movb   $0x1,0x2e9d(%rip)        # 4010 <__TMC_END__>
    1173:	5d                   	pop    %rbp
    1174:	c3                   	retq   
    1175:	0f 1f 00             	nopl   (%rax)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <frame_dummy>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	e9 77 ff ff ff       	jmpq   1100 <register_tm_clones>

0000000000001189 <printBits>:
    1189:	f3 0f 1e fa          	endbr64 
    118d:	41 54                	push   %r12
    118f:	55                   	push   %rbp
    1190:	53                   	push   %rbx
    1191:	49 89 f4             	mov    %rsi,%r12
    1194:	8d 6f ff             	lea    -0x1(%rdi),%ebp
    1197:	eb 2f                	jmp    11c8 <printBits+0x3f>
    1199:	48 63 c5             	movslq %ebp,%rax
    119c:	41 0f b6 14 04       	movzbl (%r12,%rax,1),%edx
    11a1:	89 d9                	mov    %ebx,%ecx
    11a3:	d3 fa                	sar    %cl,%edx
    11a5:	83 e2 01             	and    $0x1,%edx
    11a8:	48 8d 35 55 0e 00 00 	lea    0xe55(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    11af:	bf 01 00 00 00       	mov    $0x1,%edi
    11b4:	b8 00 00 00 00       	mov    $0x0,%eax
    11b9:	e8 d2 fe ff ff       	callq  1090 <__printf_chk@plt>
    11be:	83 eb 01             	sub    $0x1,%ebx
    11c1:	85 db                	test   %ebx,%ebx
    11c3:	79 d4                	jns    1199 <printBits+0x10>
    11c5:	83 ed 01             	sub    $0x1,%ebp
    11c8:	85 ed                	test   %ebp,%ebp
    11ca:	78 07                	js     11d3 <printBits+0x4a>
    11cc:	bb 07 00 00 00       	mov    $0x7,%ebx
    11d1:	eb ee                	jmp    11c1 <printBits+0x38>
    11d3:	48 8d 3d 2c 0e 00 00 	lea    0xe2c(%rip),%rdi        # 2006 <_IO_stdin_used+0x6>
    11da:	e8 91 fe ff ff       	callq  1070 <puts@plt>
    11df:	5b                   	pop    %rbx
    11e0:	5d                   	pop    %rbp
    11e1:	41 5c                	pop    %r12
    11e3:	c3                   	retq   

00000000000011e4 <test>:
    11e4:	f3 0f 1e fa          	endbr64 
    11e8:	48 ba 55 55 55 55 55 	movabs $0x5555555555555555,%rdx
    11ef:	55 55 55 
    11f2:	48 89 f8             	mov    %rdi,%rax
    11f5:	48 21 d0             	and    %rdx,%rax
    11f8:	48 d1 ef             	shr    %rdi
    11fb:	48 21 d7             	and    %rdx,%rdi
    11fe:	48 8d 14 38          	lea    (%rax,%rdi,1),%rdx
    1202:	48 b9 33 33 33 33 33 	movabs $0x3333333333333333,%rcx
    1209:	33 33 33 
    120c:	48 89 d0             	mov    %rdx,%rax
    120f:	48 21 c8             	and    %rcx,%rax
    1212:	48 c1 ea 02          	shr    $0x2,%rdx
    1216:	48 21 ca             	and    %rcx,%rdx
    1219:	48 01 c2             	add    %rax,%rdx
    121c:	48 b9 0f 0f 0f 0f 0f 	movabs $0xf0f0f0f0f0f0f0f,%rcx
    1223:	0f 0f 0f 
    1226:	48 89 d0             	mov    %rdx,%rax
    1229:	48 21 c8             	and    %rcx,%rax
    122c:	48 c1 ea 04          	shr    $0x4,%rdx
    1230:	48 21 ca             	and    %rcx,%rdx
    1233:	48 01 c2             	add    %rax,%rdx
    1236:	48 b9 ff 00 ff 00 ff 	movabs $0xff00ff00ff00ff,%rcx
    123d:	00 ff 00 
    1240:	48 89 d0             	mov    %rdx,%rax
    1243:	48 21 c8             	and    %rcx,%rax
    1246:	48 c1 ea 08          	shr    $0x8,%rdx
    124a:	48 21 ca             	and    %rcx,%rdx
    124d:	48 01 c2             	add    %rax,%rdx
    1250:	48 b9 ff ff 00 00 ff 	movabs $0xffff0000ffff,%rcx
    1257:	ff 00 00 
    125a:	48 89 d0             	mov    %rdx,%rax
    125d:	48 21 c8             	and    %rcx,%rax
    1260:	48 c1 ea 10          	shr    $0x10,%rdx
    1264:	48 21 ca             	and    %rcx,%rdx
    1267:	48 01 d0             	add    %rdx,%rax
    126a:	48 ba 00 00 00 00 ff 	movabs $0xffffffff00000000,%rdx
    1271:	ff ff ff 
    1274:	48 21 d0             	and    %rdx,%rax
    1277:	c3                   	retq   

0000000000001278 <nlz>:
    1278:	f3 0f 1e fa          	endbr64 
    127c:	b9 20 00 00 00       	mov    $0x20,%ecx
    1281:	b8 40 00 00 00       	mov    $0x40,%eax
    1286:	eb 05                	jmp    128d <nlz+0x15>
    1288:	48 d1 f9             	sar    %rcx
    128b:	74 13                	je     12a0 <nlz+0x28>
    128d:	48 89 fa             	mov    %rdi,%rdx
    1290:	48 d3 ea             	shr    %cl,%rdx
    1293:	48 85 d2             	test   %rdx,%rdx
    1296:	74 f0                	je     1288 <nlz+0x10>
    1298:	48 29 c8             	sub    %rcx,%rax
    129b:	48 89 d7             	mov    %rdx,%rdi
    129e:	eb e8                	jmp    1288 <nlz+0x10>
    12a0:	29 f8                	sub    %edi,%eax
    12a2:	c3                   	retq   

00000000000012a3 <zeroer>:
    12a3:	f3 0f 1e fa          	endbr64 
    12a7:	48 89 f8             	mov    %rdi,%rax
    12aa:	48 d1 e8             	shr    %rax
    12ad:	48 09 f8             	or     %rdi,%rax
    12b0:	48 89 c7             	mov    %rax,%rdi
    12b3:	48 c1 ef 02          	shr    $0x2,%rdi
    12b7:	48 09 f8             	or     %rdi,%rax
    12ba:	48 89 c7             	mov    %rax,%rdi
    12bd:	48 c1 ef 04          	shr    $0x4,%rdi
    12c1:	48 09 c7             	or     %rax,%rdi
    12c4:	48 89 f8             	mov    %rdi,%rax
    12c7:	48 c1 e8 08          	shr    $0x8,%rax
    12cb:	48 09 c7             	or     %rax,%rdi
    12ce:	48 89 f8             	mov    %rdi,%rax
    12d1:	48 c1 e8 10          	shr    $0x10,%rax
    12d5:	48 09 f8             	or     %rdi,%rax
    12d8:	48 89 c2             	mov    %rax,%rdx
    12db:	48 c1 ea 20          	shr    $0x20,%rdx
    12df:	48 09 d0             	or     %rdx,%rax
    12e2:	c3                   	retq   

00000000000012e3 <main>:
    12e3:	f3 0f 1e fa          	endbr64 
    12e7:	55                   	push   %rbp
    12e8:	53                   	push   %rbx
    12e9:	48 83 ec 18          	sub    $0x18,%rsp
    12ed:	bb 28 00 00 00       	mov    $0x28,%ebx
    12f2:	64 48 8b 03          	mov    %fs:(%rbx),%rax
    12f6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    12fb:	31 c0                	xor    %eax,%eax
    12fd:	48 c7 04 24 ff ff 01 	movq   $0x1ffff,(%rsp)
    1304:	00 
    1305:	48 89 e5             	mov    %rsp,%rbp
    1308:	48 89 ee             	mov    %rbp,%rsi
    130b:	bf 08 00 00 00       	mov    $0x8,%edi
    1310:	e8 74 fe ff ff       	callq  1189 <printBits>
    1315:	48 c7 04 24 00 00 01 	movq   $0x10000,(%rsp)
    131c:	00 
    131d:	48 89 ee             	mov    %rbp,%rsi
    1320:	bf 08 00 00 00       	mov    $0x8,%edi
    1325:	e8 5f fe ff ff       	callq  1189 <printBits>
    132a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    132f:	64 48 33 03          	xor    %fs:(%rbx),%rax
    1333:	75 0c                	jne    1341 <main+0x5e>
    1335:	b8 00 00 00 00       	mov    $0x0,%eax
    133a:	48 83 c4 18          	add    $0x18,%rsp
    133e:	5b                   	pop    %rbx
    133f:	5d                   	pop    %rbp
    1340:	c3                   	retq   
    1341:	e8 3a fd ff ff       	callq  1080 <__stack_chk_fail@plt>
    1346:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    134d:	00 00 00 

0000000000001350 <__libc_csu_init>:
    1350:	f3 0f 1e fa          	endbr64 
    1354:	41 57                	push   %r15
    1356:	4c 8d 3d 4b 2a 00 00 	lea    0x2a4b(%rip),%r15        # 3da8 <__frame_dummy_init_array_entry>
    135d:	41 56                	push   %r14
    135f:	49 89 d6             	mov    %rdx,%r14
    1362:	41 55                	push   %r13
    1364:	49 89 f5             	mov    %rsi,%r13
    1367:	41 54                	push   %r12
    1369:	41 89 fc             	mov    %edi,%r12d
    136c:	55                   	push   %rbp
    136d:	48 8d 2d 3c 2a 00 00 	lea    0x2a3c(%rip),%rbp        # 3db0 <__do_global_dtors_aux_fini_array_entry>
    1374:	53                   	push   %rbx
    1375:	4c 29 fd             	sub    %r15,%rbp
    1378:	48 83 ec 08          	sub    $0x8,%rsp
    137c:	e8 7f fc ff ff       	callq  1000 <_init>
    1381:	48 c1 fd 03          	sar    $0x3,%rbp
    1385:	74 1f                	je     13a6 <__libc_csu_init+0x56>
    1387:	31 db                	xor    %ebx,%ebx
    1389:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1390:	4c 89 f2             	mov    %r14,%rdx
    1393:	4c 89 ee             	mov    %r13,%rsi
    1396:	44 89 e7             	mov    %r12d,%edi
    1399:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    139d:	48 83 c3 01          	add    $0x1,%rbx
    13a1:	48 39 dd             	cmp    %rbx,%rbp
    13a4:	75 ea                	jne    1390 <__libc_csu_init+0x40>
    13a6:	48 83 c4 08          	add    $0x8,%rsp
    13aa:	5b                   	pop    %rbx
    13ab:	5d                   	pop    %rbp
    13ac:	41 5c                	pop    %r12
    13ae:	41 5d                	pop    %r13
    13b0:	41 5e                	pop    %r14
    13b2:	41 5f                	pop    %r15
    13b4:	c3                   	retq   
    13b5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    13bc:	00 00 00 00 

00000000000013c0 <__libc_csu_fini>:
    13c0:	f3 0f 1e fa          	endbr64 
    13c4:	c3                   	retq   

Disassembly of section .fini:

00000000000013c8 <_fini>:
    13c8:	f3 0f 1e fa          	endbr64 
    13cc:	48 83 ec 08          	sub    $0x8,%rsp
    13d0:	48 83 c4 08          	add    $0x8,%rsp
    13d4:	c3                   	retq   
